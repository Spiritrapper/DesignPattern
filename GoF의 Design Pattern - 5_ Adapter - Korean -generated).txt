[음악]

아

안녕하세요

고 표에 디자인 패턴 중 아답터

패턴에 대해서 살펴보겠습니다

패턴의 이름인 아답터는 화면에서 보고

있는 아답터를 의미하는데요

지금 보고 있는 이 아파트는 요

usd c 단자를 220볼트 단자에

그대로 사용할 수 없을 때

이 아답터 장치를 이용해서 사용할 수

있도록 하는 건데요

디자인패턴 관점에서 해석하면 요 어떤

클래스를 삶이 하는데 이 클래스 에

대한 코드를 변경할 수 없는

상황에서도

아답터 패턴을 적용해서 사용할 수

있도록 해줍니다

아답터 패턴에 대한 클래스

다이어그램을 설명하겠습니다

아직 e 클래스 다이어그램은 아답터

패턴이 적용되지 않은 상태인데요

유저 클래스 는 애니 머리 라는

클래스를 사용하구요

이 애니멀 클래스 는 추상 클래스

로써 구체적인 구현은 그 파생 클래스

들이 맞게 됩니다

파생 클래스로 도구와 캣 클래스가

있구요

그런데 여기서 빨간색의 에 타이거

클래스를

애니멀 클래스 처럼 사용하고자 합니다

문제는 이 타이거 클래스 는 어떠한

이유로 기존의 코드를 변경할 수

없어서 그대로 사용해야 한다는

점입니다

이 타이거 클래스를

애니멀 클래스 처럼 사용할 수 있게

하기 위해서는 요 먼저 타이거 아답터

라는 클래스를 듯 합니다

그리고 이 타이거 아자 터 클래스가

애니멀 클래스를 상속 바꾸 요

그리고 타이거 객체를 필드 로써 갖게

합니다

이렇게 되면 타이거 클래스를 변경하지

않아도 타이거 아답터 클래스를 통해서

애니멀 클래스 처럼 사용할 수 있게

됩니다

이렇게 적용된 패턴을 아답터

패턴이라고 합니다

이제 이 클래스 다이어그램을 코드

로그인 해 보겠습니다 먼저 애니멀

그랬습니다

이 클래스는 추상 클래스 이므로

앱스 젝트 란 키워드를 추가 하구요

필요하다면 클래스가 아닌 인터페이스로

지정이 되는데요 하지만 지금의 경우

클래스 에 어떤 필드를 가지고 있어서

추상 필드 로 정했습니다

그 추가적인 필드는 이름값이 인데요

이름을 담는 네임 필드를 추가합니다

생성자에서 네임 필드의 값을 지정할

수 있도록 합니다

그리고 이 클래스의 추상 메서드를

추가합니다

이 애니멀 클래스를 상속받는 도구

클래스를 추가합니다

이 클래스는 애니멀 클래스를 상속한

한다고 지장 하구요

생성자를 추가해줍니다

그리고 부모 클래스 의 추상 메서드를

추가 해 줍니다

이 매스 드에 구현 코드를 입력합니다

암으로 캣 클래스를 추가합니다

애니멀 을 3 싶었구요

생성자를 추가합니다

부모 클래스 의 추상 메소드를

추가합니다

이 메소드의 구현 코드는 딴 거

같습니다

이제 이 클래스들을 사용하는 유저

클래스를 추가합니다

메인 함수를 추가 하구요 아

어레이 리스트에 다음처럼 도구와 캣

죄들을 추가합니다

어레이 리스트를 임포트 하구요

그리고 다음처럼 각 객체들의 사운드

메서드를 호출합니다

실행이 보면요

이제 타이거 라는 클래스가 도입되었고

이 클래스를 애니멀 클래스 처럼

사용하고자 합니다 하지만 이 타이거

클래스 는 변경할 수 없는 상황이라고

하겠습니다

타이거 클래스 코드를 추가하겠습니다

애니멀 클래스 1 다르게

메인 필드는 생성자가 아닌

3 대 인 메서드를 통해 지정해야

하고

애니멀 클래스의 사운드의 대한

메서드와 비슷한 기능은 이 루 어

메서드가 이용됩니다

먼저 이 타이거 클래스를 마치 애니멀

클래스 처럼 사용해 보겠습니다

유저 클래스 에서요

다음 코드를 추가해 보겠습니다

우리 목적은 이 코드가 정상적으로

처리되는 것을 말하는 것입니다

스윙이 보면요

보시는 것처럼 에러가 발생합니다

이 타이가 클래스를 도구나 개처럼

애니멀 클래스 타입 처럼 사용하기

위해서 타이거 아답터 클래스를

추가합니다

애니멀 클래스를 상속 받구요

생성자를 추가합니다

내부에 타이거 필드를 추가합니다

생성자에서 타이거 객체를 생성 하구요

이름을 지정합니다

그리고 애니멀 클래스 의 추상

메서드를 추가합니다

코드는 도구와 택과 동일하게 먼저

이름을 출력하고 요

그 다음에 타이거의 로워 메서드를

호출해 줍니다

이제 유저 클래스 에서 타이거

아답터를 사용해서 타이거 를 사용하는

코드를 작성해 보겠습니다

이 코드 대신에 요 다음 코드를

입력합니다

실행이 보면요

다음처럼 정상적으로 실행되는 것을

확인할 수 있습니다

지금까지 아답터 패턴에 대해서

살펴보았는데요

아 답답해 터는 변경할 수 없는

클래스를

원하는 형태의 인터페이스나 클래스 로

사용하고자 할 때 아답터 클래스 를

도입하여 사용할 수 있었습니다

