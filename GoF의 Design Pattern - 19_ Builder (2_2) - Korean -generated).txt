[음악]

아

안녕하세요

꼭 표에 디자인 패턴 중 빌더 패턴

에 대한 두번째 강좌입니다

빌더 패턴 에 대한 첫 번째 강좌에서

샘 안되었지만 다시 언급하면 요 빌더

패턴 은 복잡하게 구성된 객체를 좀

더 효과적으로 생성하기 위한

패턴입니다

빌더 패턴 은 다른 패턴 들과는

다르게 두가지의 서로 다른 내용으로

이야기 되는데요

첫번째는 객체 생성시 생성자의 인자

개수가 많을 때 각 인자를 독립적으로

명확하게 지정해서 생성하는 패턴입니다

두번째는 객체를 생성하면 서서 여러

단계를 순차적으로 실행해서 생성될 때

이 생성 단계 에 대한 순수한 은정이

두고 악 단계를 다양하게 구현할 수

있도록 하는 패턴을 말합니다

앞 강좌에서 는 첫번째 빌더 패턴에

대해서 새면 되었구요

이 강좌에서는 두번째 빌더 패턴에

대해서 설명하겠습니다

이 영상에서 살펴볼 빌더 패턴 에

대한 클래스 다이어그램 예시입니다

먼저 이 빌더 클래스 는 추상

클래스입니다

추상 클래스 이므로 클래스 의 이름을

이 텔리 체로 표기하고 있습니다

빌더 클래스에는 무언가를 만드는

책임을 갔는데요

무언가를 만들어 나는 매스 들을

제공해야 하며 이 메서드 들은

구체적인 코드가 없는 추상 메서드

입니다

디렉터 클래스 는 빌더에서 제공하는

메소드를 정해진 순서대로 정확하게

호출해야 할 책임을 갖습니다

빌더 추상 클래스를 상속받는 이 세

개의 클래스 는

무언가를 만드는 빌더 클래스의 추상

매스 들을 구체적으로 구현합니다

플레인 텍스트 빌더는 어떤 데이터

객체 즉 이 데이터 클래스 의 객체를

평이한 텍스트 형태의 빈 짜 열로

만들구요

제 2스킬 더는 데이터 객체를 제이슨

형태의 분 짜 열로 만듭니다

xml 빌더는 데이터 겠지 를 xml

형태의 문자열로 만듭니다

이제 이 클래스 다이어그램을 그 해

보겟습니다 먼저 데이터 클래스 입니다

2 데이터 클래스 는 내부에 이름과

나이 에 대한 필드를 같습니다

[음악]

이름과 나이 필드는 생성자를 통해서

지정됩니다

이름과 나이 딜러는 겟 메서드를

추가합니다

[음악]

다음은 필더 추상 클래스입니다

처리해야 할 데이터 객체를 킬

들어봤습니다

으

자식 클래스 에서 이 필드를

사용하므로

프로텍티브 끈 자로 지정되고 있습니다

생성자를 통해서 이 데이터 필드를

지정하도록 합니다

[음악]

그리고 원하는 형식의 문자열을

생성하기 위한 3개의 추상 메서드를

추가합니다

이 세 개의 메서드를 통해서 원하는

형태의 분 짜여 를 생성하게 되는

데요 어떤 순서로 또 어떤 식으로 이

배스 들을 사용하는지는

캐릭터 클래스가 결정합니다

디렉터 클래스를 추가합니다

빌 가 객체를 필 들어갔구요

생성자에서 이 빌더 클래스를 지정할

수 있도록 합니다

빌드 라는 이름의 메서드를 추가

는데요

[음악]

보시는 것처럼

빌더 필드 를 이용해서

헤드 바디 프 트 메서드를 순차적으로

추가해서 그 결과를 연결해서 안하고

있습니다

이제 빌 거 클래스를 상속받는 클래스

들을 추가하겠습니다

먼저 플레인 텍스트 필더 클래스입니다

빌더 클래스를 상속 받도록 하구요

생성자를 추가합니다

그리고 부모 클래스의 추상 메서드를

추가합니다

플레인 텍스트 필드는 데이터 필드를

2 데이터 필드를

그냥 평범한 문자열로 구상 하는데요

플레인 텍스트 필드의 경우 헤드

메서드와

프 트 메서드는 핀 문자열을

반환합니다

그리고 바디 메서드 는 데이터 필드의

이름과 나이를 조합해서 문자열로

바랍니다

다음은 제 이승필 더 클래스 입니다

빌더 클래스를 상속 받도록 하구요

5

생성자를 추가합니다

으

그리고 구현에 r 추상 메서드를

추가합니다

으

헤드의 메서드는 제이슨 형식 의

시작을 나타내는 열린 중 가로 분

짤을 안 합니다

바비 메서드 는 데이터 필드의 이름과

나이를 제이슨 형식의 문자열로

구성하여 바랍니다

[음악]

푸 틈에서 드는 제이스 인 정식의

그칠 나타내는 다친 중 가로 문자를

납니다

암은 xml 빌더 클래스입니다

빌더 클래스를 상속 받도록 하구요

생성자를 추가합니다

[음악]

으

그리고 구현 해야 할 추상 메서드를

추가합니다

[음악]

헤드의 메서드는 xml 형식을

시작하는 문자열을 바랍니다

바디 메서드 는 데이터 필드의 이름과

나이를 xml 형식의 문자열로

구성해서 안나옵니다

부트 메서드는 xml 형식의 끝일

나타내는 문자열을 반환합니다

[음악]

이제

지금까지 만든 클래스들을 테스트

해보도록 하겠습니다 메인 엔트리

클래스를 추가합니다

메인 함수를 쭉 합니다

데이터 객체를 하나 생성하고 요

으

[음악]

먼저 플레인 텍스트 필드 기체로

원하는 문자열을 생성해 보겠습니다

이를 위해서 플레이텍스 빌더 객체를

생성 하구요

이 빌더 객체를 생성자의 인자로

사용해서 디렉터 객체를 생성합니다

이 최대 객체의 빌드 메서드로

문자열을 생성 하구요

[음악]

2분 짜 혀를 출력합니다

[음악]

세상에 보면요 예

결과는 다음과 같습니다

5

다음은 제이스 엔필드 를 이용해서

동일한 데이터 객체를 제이슨 형식의

문자열로 만드는 코드입니다

그리고 다음은 xml 필더를 이용해서

동일한 데이터 객체를 xml 형식의

문자열로 만드는 코드입니다

[음악]

실행이 보면요 5

생이 보면 동일한 데이터 객체를

이용해서

단순한 문자열 그리고 제이슨 형식의

문자열 그리고 xml 형식의 분 쌓여

리 생성된 것을 확인할 수 있습니다

이상으로 빌더 패턴의 두번째 내용을

살펴 보았는데요

지금 살펴본 빌더 패턴 은 어찌보면

템플릿 패턴이라 아사드 패턴 그리고

스테 터지 패턴을 객체 생성의 적용한

것으로도 볼 수 있습니다

이 디렉터가 포사다 패턴에 대한

것으로 이 빌더 객체 2 의 배스

들의 사용을 단순화 시켜 주고

있습니다

또

빌더를 통해서 무언가를 생산해 낼 때

호출되는 매스 들을 추상 메서드로

사랑하고 각 메서드를 그 파생 클래스

에서 구현하도록 한 뒤

매스 들의 호출 방식은 이 디렉터

클래스 에서 정해놓은 것은 템플릿 몇

4 그의 응용 해당합니다

또한 원하는 상황에 맞는 형식의

문자열로 변환한 것은 스트레 터지

패턴의 적용해 해당됩니다

사실 스테 터지 패턴은 워낙 단순하고

op 의 기본을 그대로 반영한 패턴

이기에 다른 패턴 들에서도 쉽게

찾아볼 수 있는 패턴이 기도합니다

결국 이 강좌에서 설명한 두 번째

빌더 패턴 은 하나의 독립적인 패턴

이라기 보다는 다른 패턴의 응용

으로도 볼 수 있습니다

그래서 빌더 패턴 의 경우 다른 패턴

들과는 다르게 동일한 이름으로 전혀

다른 내용이 2개나 존재하는 지도

모르겠습니다

여튼 패턴은 암기 에서 그대로

사용하는 것이 아닌 이해하고 다양하게

운용 해서 사용한 도구 이므로

다양한 패턴을 살펴 본다는 점에서

빌더 패턴 을 2개로 나누어 살펴

보는 것도 괜찮은 학습 이라고

생각됩니다

