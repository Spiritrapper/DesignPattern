[음악]

아

안녕하세요

꼭 효 의 디자인 패턴 중 인터프리터

패턴에 대한 강좌입니다

인터프리터 패턴은 운보의 맞춰 작성된

스크립트를 해석하고 요

턱 된 구문을 정해진 규칙대로

실행하는 패턴입니다

예시도 사용할 스크립트입니다

빅 2 인 폰트 루프 숫자 2 백

라이트 & 백 엔드 총 9개의

구문으로 구성된 스피킹 인데요

스크립트를 구성하는 구문을 정해진 문

보 에 맞춰 해석된 것을 컨텍스트

라고 합니다

그리고 이 단어 하나하나에 대한

구문은 표현 즉 익스프레션 이라고도

합니다

이 스크립트는

비긴 으로 시작해서 & 로 끝나야

합니다

그리고 프론트는 게임상의 캐릭터를

앞으로 이동시키는 명령 이구요

루프는

범봉 문 의 시작을 나타냅니다

그리고 이 숫자 2는 몇 번 반복할

것인지 를 나타내는 값이 구요

이 숫자 다음에 나타나는

2구 문들이

반복할 구문입니다

이 엔드 는

반복문 의 끝이구요 즉 빼 꽈 라이트

명령을 두 번 반복하는 것입니다

빽 은 캐릭터를 뒤로 이동 시킨 명령

이구요

라이트는 캐릭터를 오른쪽으로

이동시키는 명령입니다

2 전체 스크립트는

& 문을 만나면 종료됩니다

결국 이 스크립트는 캐릭터를

앞으로 이동하고

뒤로 이동하고

오른쪽으로 이동하고 다시 뒤로

이동하고 또 오른쪽으로 이동 하고요

그리고 뒤로 1호 시킵니다

이 스크립트를 이용해서 다양하고 매우

길고 복잡한 스크립트를 만들 수도

있습니다

즉 반복문 안에 또 다른 방 복무를

넣을 수 있는데요 실습을 통해서 이런

복잡한 구문을 해석할 수 있도록

하겠습니다

이 클래스 다이어그램은 인터프리터

패턴에 대한 1까지 예시 인데요

앞서 본 스크립트를 해석하고 실행하는

프로그램에 대한 클래스 다이어그램

입니다

먼저 이 컨텍스트가 스크립트에서

구문을 꼽아 내는 기능을 담당 하구요

이 익스프레션 은 스크립트를 구성하는

각 구문을 처리하는 인터페이스입니다

그 외에 모든 클래스 는

익스프레션 인터페이스를 구현하는

클래스 인데요

먼저 비긴 익스프레션 은 이 비긴

구문을 처리하는 클래스입니다

그리고 커맨드 리스트 2 스페셜 는

여러 개의 커맨드 이 스프레이 션

클래스 객체를 가질 수 있는

클래스입니다

커맨드 익스프레션 2

실제 실행할 수 있는 명령에 대한

구문 인데요

반복문 루프 나

빽 라이트

프론트 레프트 된거 같은 구문을

처리합니다

커맨드 익스프레션 은 추상 클래스

이구여

이 추상 클래스를 상속받는

루프 커맨드 익스프레스 저는

반복문 인

루프와

그 반복 횟수에 대한 구문을 처리

하구요

액션 커맨드 익스프레션 은 프론트 백

레프트 라이트 같은 구문을 처리합니다

이제 이 클래스 다이어그램을 구현해

보도록 하겠습니다 먼저 컨테스트

입니다

이 클래스는 스크립트를 구성하는

구문을 하나씩 추출하는 기능을

제공합니다

먼저 스크립트 문자에 대해서 공백

문자를 9분자로 해서 분리할 수 있는

스트링 토크 나 잊어 개체를 필드로

추가합니다

그리고 현재 꼽아 는 구문을 저장하는

필드를 추가합니다

생성자의 인자로

이러한 스크립트 문자열을 받을 수

있도록 합니다

이 스크립트 문자열은 스프링 토큰

라이저 개체를 만들 때 생성자에

인자로 사용됩니다

그리고 레디 넥스트 키워드 메서드를

호출합니다

미드 nxt 키워드 메서드를

추가합니다

공백 문자를 기준으로 구문에 대한

단어를 가지고 있는지 먼저 확인

하구요

있다면 다음 단어를 얻어서 커런트

키워드에 지정합니다

그렇지 않다면 커런트 키워드에 널

값을 지정합니다

그리고 커런트 키보드를

가능합니다

또 이 커런트 키워드를 얻을 수 있는

메서드를 추가합니다

이 컨텍스트 클래스 의 기능을 좀 더

이해하기 위해서 이 클래스를 사용해

보겠습니다

메인 엔트리 클래스를 추가합니다

메인 함수를 추가합니다

해석할 스크립트 문자열을 정 의

하구요

이 스프리트 문자열을 생성자의 인자로

해서 컨테스트 객체를 생성합니다

무한 반복문을 추가 하구요

스크립트의 구문을 순서대로 하나

얻었습니다

구문이 없다면 반복문을 종류 합니다

9 문이 있다면 해당 구문을

출력합니다

그리고 다음 구문을 1 도록 합니다

실행해 보겠습니다

실행이 보면 스크립트 문자열을

구성하는 각 단어를

순서대로 하나씩 출력하는 것을 볼 수

있습니다

즉 컨텍스트 클래스 는 스크립트

문자열을 공백 문자를 기준으로 한

단어씩 순서대로 꼽아 내는 기능만을

가지고 있습니다

이제 구문을 처리하는 클래스들을

만들어 보겠습니다

여러 개의 클래스를 순서대로 추가 할

건데요

클래스 간의 순환 참조가 있어서

추가되지 않은 상태에서 사용되는

부분이 몇 개 있습니다

코드가 모두 작성되면 모든 클래스가

다 추가 된다는 점을 알아두시기

바랍니다

먼저 익스프레션 인터페이스입니다

2개의 api 를 제공 하는데요

파스는

컨텍스트가 제공하는 구문이 올바른지

확인 하구요

구문에 대한 구체적인 구문 클래스

객체를 생성해 주는 역활을 합니다

그리고 몇 메서드는 구문에 대한 어떤

기능을 실행합니다

이 익스프레션 인터페이스를 구해 나는

비키니 익스프레션 클래스를 추가합니다

익스프레션 인터페이스를 구해야

들어가구요

이 비긴 익스프레션 클래스 는 이

비긴 구문을 담당한 안되요

잎이 긴 에 해당되는

end 쿤은 사이에 있는 모든 구문

들을 처리해야 합니다

그러기 위해서는 여러 개의 구문 들을

저장할 수 있는

커맨드 리스트 익스프레션 클래스의

객체를 필드로 같습니다

구현 해야 할 메소드를 추가합니다

이 파스 msd 에 대한 코드는

다음과 같구요

먼저

체크 발리댁 키워드 메서드를 이용해서

컨테스트에 현재 구문이 올바른지

확인합니다

체크 발리 드 키워드 메서드는 클래스

에서 형태로 다음처럼 추가합니다

즉 구문이 빅 인감 인지를 확인하고

있습니다

현재 구문 인 비긴 이 처리

되었으므로

다음 구문을 1 도록 하고요

그리고 이 빙과

& 사이에 있는 구문 들에 대한

객체들을 담을

커맨드 리스트 익스펜션 객체를

생성합니다

그리고 이 객체의

파스 메서드를 호출해서 그 결과를

바라고 있습니다

런 메서드는 요

e 스 펜 션 개체 에 런 메서드를

호출하는 것이 전부입니다

그리고 이 객체를 문자열로 변할 수

있는 투 스 트림 메서드를 재정의할

이다

이제 이 커맨드 리스트 익스프레션

클래스를 추가하겠습니다

익스프레션 인터페이스를 구현하도록

하구요

이 커맨드 리스트 익스프레션 클래스

는 이 클래스 타일 g 에서 보는

것처럼 여러 개의

커맨드 이 스프레이 션 타입의 객체를

필드로 같습니다 eb 않고 들은 다음

거구요

년 해야할 메소드를 추가합니다

먼저 파스 메서드 인데요

무한 반복문을 추가 하구요

현재 구문을 얻어 옵니다

어두운 구문이 널 값이면 스크립트에

오류가 있다 로 가장을 하고 펄스를

가능합니다

그렇지 않고 어두운 구문이 엔드

문자열이 면

다음 구문을 읽고 부안 반복문을 종료

시킵니다

또

& 문자열이 아니라면요

해당 구문에 맞는 커맨드 익스프레션

타입의 구체적인 객체를 생성합니다

루프 커맨드 익스프레션 클래스 에

체크 발 드 키워드 메서드는 현재

구문이 루프 문자열이 인지를 검사

하구요 만약 루프 문자열이 라면 루프

커맨드 x 패션 개체를 생성합니다

그리고

액션 커맨드 익스프레션 클래스 의

체크 발 드 키워드는 현재 구문이

프론트 문자열이나 100분 짜 열

또는 레프트 난 라이트 문자열이 인질

검사 하구요 만약 맞다면

액션 커맨드 익스프레션 객체를

생성합니다

그리고

앞서 생성된 객체 들은 모두 이

커맨드 변수에 할당 되는데요

커맨드 에 할당 되었다면 해당 커맨드

객체 일에

파스 메서드를 호출해서 스크립트의

다음 구문을 해석하도록 합니다

해석이 성공하면 요

2

커맨드 쓰 필드에 추가 구요 해석이

실패하면 펄스를 바랍니다

그리고 입에서 드는 마지막에 툴을

사용합니다

다음은 런 메서드입니다

이 커맨드 쓰 에서 저장된 모든

객체의 이런 메서드를 호출해 주면

됩니다

그리고 이 객체를 문자열로 변환

해주는 투 스트링 메서드를 재정의할

이다

다음은 이 커맨드 익스펜션 입니다

추상 클래스 이구요

익스프레션 인터페이스를 구현하도록

합니다

자신이 처리해야 할 구문에 대한

문자열을 담 난 키워드 필드를

추가합니다

그리고 생성자에서 이 키워드 필드의

값을 지정할 수 있도록 합니다

이 커맨드 이 스프레이 션 추상

클래스가 필요한 이유는요

실제 명령으로 실행되는 루프 나 폰트

빽 레프트 라이트 와 같은 구문과

비긴 이나 & 처럼 어떤 문법적인

개념의 구문을 분리할 필요가 있기

때문입니다

이 추상 클래스를 상속받는 클래스

들을 살펴보겠습니다

먼저 액션은 커맨드 익스프레션 입니다

커맨드 x 플레이 시안을 상속 받도록

하구요

생성자를 추가합니다

그리고 구현 해야 할 메서드를

추가합니다

먼저 팟은 에서 드립니다

체크 발리를 키워드 메서드로 자신이

처리해야 할 구문에 대한 문자열이

맞는지를 확인합니다

이 체크 발리 듯 키워드 메서드는

다음과 같습니다

즉 처리할 키워드가 프론트 빽 레프트

라이트 문 짤 중에 하나인 지를

확인합니다

이처럼 자신이 처리해야 할 구문이

맞다면

다음 구문을 1 구요

이 1분 구문이

[음악]

너 리라면

펄스를 관한 하도록 합니다

그 외에 경우라면

룰을 잘 안해서 올바르게 처리되었다

라고 가정합니다

다음은 런 메서드입니다

간단히 자신이 읽은 구문을 출력해

줍니다 즉 프론트 빽 레프트 라이트

같은 문자열을 출력하게 될 것입니다

이 객체를 문자열로 변환하는 투

스트링 메서드를 재정의할 니다

마지막으로 루프 커맨드 이스 프레시안

클래스를 추가합니다

커맨드 익스프레션 클래스를 상속

받도록 하구요

이 클래스 는 반복 명령인 루프

구문을 처리하는 클래스입니다

몇 번 반복할 3대 안습 값을 저장할

필드를 추가합니다

그리고 반복해야 할 구문 들을 담을

2

커맨드 미스트 익스프레션 객체를

필드로 축하합니다

생성자를 추가 하구요

구현 해야 할 메서드를 추가합니다

으

먼저 파스 매서 들 보면요

이 체크 발리우드 키워드 내 젖 을

사용해서

이 클래스 에서 처리해야 할 구문에

대한 문자 여인 지를 확인합니다

이 체크 바위들 키워드에서 드는 다음

것 같습니다

그리고 다음 꿈은 문자열을 있는데요

루프 부문은

보시면 바로 다음에

반복 횟수가

숫자 값으로 와야 합니다

그래서

이카운트 키워 대 값인 어리면

오류로 처리합니다

이카운트 키워드의 값은 아직 문자

일인데요

이를

점수 값으로 변화시켜 합니다

정상적으로 정수 값으로 표현 되면요

커맨드 리스트 익스프레션 객체를

생성합니다

그리고 다음 구문을 읽게 하구요

이 구문을 커맨드 익스프레션 객체를

통해서 처리하도록 합니다

이런 매서 들은 요

2

익스프레션 객체의

이런데서 들을

이 반복 횟수만큼

실행시킵니다

그리고 이 객체를 문자열로 변환하는

투 스트링 메서드를 재정의할 니다

이제 패스 해보겠습니다

메인 엔트리 클래스 해서요 기존의

메인 메서드의 있는 코드를 모두

삭제합니다

그리고 스크립트를 새롭게 정의합니다

보시면

반복문 안에 또다른 방법 문이

들어있는 좀 더 복잡한 스케치입니다

이 스크립트를 출력하고 요

이 스크립트 문자열을 컨테스트 의

생성자의 인자로 해서 컨테스트 객체를

만듭니다

그리고 스크립트를 파싱 하기 위해서

가장 먼저 빅 인 익스프레스 객체를

만듭니다

e 스페이스 백제의 파스 메서드를

호출해서 스크립트를 해석합니다

해석이 성공적으로 완료되면

해석된 객체를

출력합니다

실행이 보면요

이 문자열이 스크립트 문자 일이구요

그다음 문자열이

해석된

개체에 문자의 됩니다

그리고 해석된 내용을

실제로 실행해 봅니다

수행의 보면요

스윙이 보면

스크립트의 각 구 문들이 올바른

순서대로 하나씩 실행되는 것을 볼 수

있습니다

이상으로 인터프리터 패턴에 대해서

해보았습니다

