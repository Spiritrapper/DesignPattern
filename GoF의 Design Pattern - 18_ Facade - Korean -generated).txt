[음악]

아

안녕하세요

고쿄 sm 패턴 중 퍼센트 패턴에

대해서 살펴보겠습니다

어떤 기능을 실행하기 위해서 여러

클래스들의 객체를 사용한 되요 이때

여러 객체들 사이의 복잡한 관계와

사용을 블랙박스와 해서 단순하게

만들어진 패턴이 허 사드 패턴입니다

예를 들어서 어떤 데이터를 조회해서

출력해 주는 기능이 있습니다

dbms 로 부터 데이터를 조회해서

그 결과를 가공한 뒤에 출력해주는

기능인데요

먼저 dbms 를 바로 조회 하기

전에 과거의 초에 된 데이터 인지를

캐쉬 해서 먼저 조사를 하구요 캐시에

데이터가 있다면 이 캐시의 데이터를

가공하고 출력하면 되고 캐시에

데이터가 없다면 dbms 를 통해서

조회를 라고 조회된 데이터를 가공하고

출력한 과 동시에 캐시 에 저장을

하게 됩니다

즉 어떤 기능을 실행하기 위해서 빛이

개체 dbms 객체

조회된 결과 대다 개체 또 조회된

결과를 가공하기 위한 객체들을

사용하게 되며 이 개체들의 메서드를

정해진 순서에 맞게 정확히 호출해

주어야 합니다

이러한 것들을 개발자가 파악하고

사용하는데요

이를 퍼센트 패턴을 적용하면 캐쉬

dbms 등과 같은 개체와 객체들의

메써드 를 파악하지 않고 도 포 사드

에 해당하는 클래스 1 만 사용하도록

단순화 시킬 수 있습니다

이 클래스 다이어그램은 앞서 언급한

기능에 대한 클래스들이 표시되어

있습니다

아직 퍼서 드 패턴이 적용되어 있지

않은 크리스타 이어 그림인데요

먼저 퍼서 더 패턴을 적용하지 않고

기능을 구현해 보고 퍼서 패턴을

적용해서 api 를 단순화 시켜

보도록 하겠습니다

로우 클래스를 추가합니다

이 클래스 는 dbms 에 수당 된

데이터를 나타내는 데 요

이름과 생일 전자 메일을 필름 값으로

같습니다

생성자에서 이 필드 값들을 지정할 수

있도록 하구요

이 필드 값들을 얻을 수 있는

메서드를 추가합니다

다음은 dbms 클래스입니다

데이터를 저장하기 위한 db 필드를

추가합니다

회심의 컨테이너를 사용했는데요

키는 스트링 이고

밸류 는 로우 클래스 타입 입니다

키는 로 클래스 객체의 이름 필드에

해당 합니다

생성자를 입력합니다

d 필드에 에

로우 데이터를 며 건 추가합니다

이름 값으로 데이터를 조회하는

메서드를 추가합니다

아무래도 dbms 를 통한 조회

이므로 실제 상황에서는 연산 하는데

시간 소요 되므로 이를 중 해내기

위해서 슬리 프로

1초간 스레드 를 멈추도록 하겠습니다

그리고 dbp 를 통해서 데이터를

조회하고 그 결과를 반환합니다

다음은 캐쉬 클래스입니다

캐시 클래스 는 dbms 에서 조회된

데이터를 임시로 담아두는 클래스입니다

dbms 를 통해서 조회하면 속도가

느리므로

이 캐쉬 를 사용해서 속도를 향상시킬

수 있습니다

dbms 에서 제외된 데이터를 저장할

캐시 필드를 추가합니다

조회된 데이터를 추가할 푸 내 3rd

를 추가합니다

캐시 로부터 데이터를 얻는 겟

메소드를 추가합니다

[음악]

다음은 멧세지 클래스입니다

이 클래스 는 로우 클래스 객체를

가공하는 클래스를 볼 수 있습니다

가공할 로우 객체에 대한 필드를

추가합니다

생성자에서 로우 필드를 지정할 수

있도록 하구요

그리고 로 의 이름을 원하는 형태로

가공해서 반환하는 메서드를 추가합니다

그리고 로 의 생일을 원하는 형태로

가공해서 반환하는 메서드를 추가

하구요

마지막으로 로우의 전자 베일을 원하는

형태로 가공해서

반환하는 메서드를 추가합니다

이제 지금까지 만든 클래스를 사용해

보겠습니다

메인 엔트리 클래스를 추가합니다

메인 함수를 추가합니다

데이터를 저장하고 조율하기 위한

dbms 와 캐시 객체를 정의합니다

조회 할 이름값을 정 하구요

먼저 캐시 객체를 통해서 이 이름값을

조회합니다

만약 tc 에 해당되는 데이터가

없다면

dbms 객체를 통해서 조회를 하구요

5

dbms 에 데이터가 있다면 캐쉬에

저장을 합니다

조회된 결과 데이터가 있다면

멧세지 클래스를 통해서 가공하기

위해서

멧세지 객체를 정의합니다

그리고 이름과 생일 전자 메일을 가공

한지혜 출력을 하구요

토의 결국 없다면

해당 이름의 데이터가 없다고 출력을

합니다

실행을 해보면 요

[음악]

코드를 보면

데이터를 조회하고 출력하기 까지 여러

개의 객체가 사용되고 있습니다

또한 dbms 를 통해서 조회된

데이터는 따 중 을 위해서 캐쉬에

저장하는 것을 잊지 않아야 하구요

데이터를 가공하기 위해서는

멧세지 라는 클래스를 사용해야 한다는

것도 알아두어야 합니다

이러한 여러가지 사항들을 개발자가

직접 기억하는 것 대신에 클래스를

하나 추가해서 단순화 시킬 수

있는데요 이러한 목적으로 클래스를

추가하는 것이 퍼 사드 패턴입니다

클래스 다이어그램 연서 포 사드

클래스를 하나 추가합니다

이 퍼 사드 가 dbms 와 캐쉬

로우 메시지와 관계를 맺고 있으므로

선으로 연결되어 있구요 여기서 로우와

메세지 처럼 단순히 화살표 선으로

연결된 것은 퍼서 드가

로우와 메시지를 사용한 달하는 넓은

의미 입니다

그리고

dbms 와 캐시 처럼

다이아몬드 로 표기된 선으로 연결된

것은 퍼 사드 에 필드로

e dbms 와 캐시가 추가된 달하는

좀 더 분명한 의미를 나타냅니다

이제 클래스 다이어그램 대로 퍼 사드

클래스를 추가합니다

dbms 와 캐쉬 객체를 필드로

추가합니다

그리고 런 이라는 메서드를 추가합니다

런 메서드는 검색할 이름 값을 인자로

받습니다

앞서 메인 엔트 디에스 작성한 코드를

2

이런 메서드의 구현 코드 로

입력합니다

이제 메인 nt 클래스 에서요

이 코드 대신에

퍼서 들 객체를 하나 만들구요

그리고 이 코드 대신에

다음과 같이 간단히 파사드 에 코드

한줄로 대체할 수 있습니다

수행을 해 보면요

지금까지 퍼서 드 패턴을 적용해서

여러개 캣 을 간의 복잡한 관계를

블랙박스와 에서

단순화시켜 봤는데요

1st 패턴을 적용해서 얻게 되는

장점을 정리하면 요 개발자는 어떤

기능을 수행하기 위해 여러 개의

클래스를 파악하지 않고 도 퍼스 하드

에 해당하는 클래스 말을 이해하고

사용하면 됩니다

또 다른 개발자에게 제공하는

라이브러리나 패키지 형태로 코드를

제공할 때 퍼서 더 패턴을 적용하면

허 사드 에 해당하는 클래스만 을

공개하고 그 외에 나머지 클래스는

비공개로 처리해도 됩니다

이는 해당 라이브러리를 받아 사용하는

개발자 입장에서 부담이 많이 줄게

됩니다

이상으로 퍼서 패턴에 대해서

살펴보았습니다

