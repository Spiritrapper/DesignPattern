[음악]

아

안녕하세요

고프 atm 패턴 좀 플라이 웨이트

패턴에 대해서 살펴보겠습니다

플라이 웨이트는 복싱 체급 쫑 프라이

급 을 말하는데요

가볍고 민첩한 복싱 선수를 의미합니다

지금 보고 계시는 그림은 지금도

살아있는 전설의 복서 인 파악해야

우선 수입니다

플라이 패턴 의 사용목적은 요 어떤

객체가 피로해서 사용할 때마다

생성하지 않고 필요할 때 단 한번만

생성하고 다시 필요해질 때 이전에

생성된 객체를 재활용 하게 됩니다

그리고 객체를 생성할 때 많은 자원이

소모되는 경우 즉 많은 메모리를

요구하거나 생성할 때 시간이 많이

소모될 경우 플라이 베어드 패턴을

적용하면 훨씬 적은 메모리로 더

빠르게 필요한 객체를 재사용할 수

있게 됩니다

이처럼 무거운 객체를 플라이 웨이드

급 처럼 가볍고 빠르게 사용할 수

있는 패턴이라고 하요 플라이 웨이드

패턴이 간 이름을 지었습니다

플라이 웨이드 패턴에 대해 1까지

예로 든 클래스 다이어그램 입니다

먼저 디트 는 0부터 9까지의 단

하나의 숫자를 매우 멋지게 화면에

표시 하는데요

이 멋진 하나의 숫자를 표시하기 위해

상당한 량의 메모리를 사용한다고

가정하겠습니다

이때 사용하는 데이터는 파일명이

0부터 9까지 정해진 총 10개의

텍스트 파일입니다

악 파일에 대한 내용은 다음과

같습니다

제 극 dgt 클래스 는 생성될 때

정해진 하나의 파일을 오픈하고

타일의 데이터를 모두 읽어서 메모리에

적재 한 뒤 입을 이용해 화면에

출력합니다

결과적으로 2d 지트 객체를 생성할

때는 파일을 열고 데이터를 읽어

메모리에 모두 적재 해야해서 상당한

비용이 발생한다고 할 수 있습니다

그리고 ed 팩토리는 누군가 원하는

숫자에 대한 dgt 객체를 요청하면

해당 되는 dg 트 객체를 반환

해주는 역할을 하는데요

2d 팩토리는 똑똑하게 도 dg 트

대체를 bd 생성이 되지 않고 처음

요청 받았을 때 한번만 생사 하구요

다음에 동일한 숫자의 요청 받으면

이전에 생성 햇던 디트 객체를 발언

합니다

넘버 클래스 는 인 숫자 값을 화면에

출력하는 기능을 수행하는 데 요 지인

숫자 값을 구성하는 각 숫자에 대한

dg 트 객체를

2d 지트 팩토리 를 사용해서

죄송합니다

이 그림은 6개의 의 디지틀 객체를

가지고 있는 1개의 넘버 객체를

나타낸 것입니다

이 그림에서 넘어 객체는 생성될 때

생성자의 인자로 4 3 4 4 3 3

1 값이 지정되어 구요

이때 이 숫자는 6자리 이므로 총

6개의 dg 트 객체 를 이용함에 도

이 6개의 비즈 객체가 모두 생성 된

것은 아니구요 플라이 웨이드 패턴의

초등 되어 셋째로는 생성된 3개의

디트 객체 많이 세운 됩니다

이제 이 클래스 다이어그램을

구해보도록 에 씁니다

먼저 dgt 클래스입니다

먼저 숫자를 표현하기 위한 데이터를

저장할 필드를 추가 하구요

그리고 생성자를 작성합니다

생성자에 인사 로 파일명을 전날

봤는데요

이 파일은 앞서 봤던 0에서 부터 9

까지 의 텍스트 파일입니다

각 파일은 모두 동일하게

여덟 줄로 구성된 문자열을 가는데요

생성자에서 는 지정된 파일에서

8 줄에 대한 문자열을 읽어서

데이터 필드에

자상 하게 됩니다 생성자에 코드를

보면 요

파일을 열 구요

데이터를 읽어서

매물이 로드하고 다시 파일을 받는

연산을 수행 하는데요 이처럼 파일

열고 닫는 변산 을 최소한으로 줄이는

것은 가장 중요한 최적화 중의

하나입니다

그리고 화면상의 xy 위치에

파일로 읽어들인 데이터를 출력해 주는

메소드를 추가합니다

이제 지금까지 사용한 클래스들을 모두

임포트 해집니다

[음악]

암은 디지틀 팩토리 클래스입니다

이 클래스 는 누군가 원하는 숫자에

대한 디스크 객체를 요청하면 해당

백제를 전달해주는 기능을 담당하는

데요

먼저 총 10개의 비스트 객체를 담을

배열을 추가 미라

그리고 게 디스트 메소드를 추가합니다

이 배스 드는 인자로

어떤 숫자 값을 받아서 해당 숫자

값에 해당되는 디드 객체를 전달하는

기능을 수행하는 데 요 보시면

풀 필드에 해당되는 디트 객체가 떠

오리 아니라면

즉 생성된 적이 있다면 그 객체를

발언 하구요

머리라면

리스트 객체를 생성하고

툴의 저장한 뒤 바로 합니다

암은 넘버 클래스입니다

먼저 긴 숫자 값에 대한 각각의

디지틀 객체를 저장할 필드를

추가합니다

2d 트리 스팅 되요

생성자를 작성합니다

생성자의 인자로 긴 숫자 값을

입력받는 데요 튄 숫자 값을 먼저

문자열이 로치 원하구요

이렇게 치환된 문자열을 구성하는 문자

값을 순서대로 읽어 와서

해당되는 디트 객체를

dg 트에 팩터 리 를 통해서

얻어와서 요

디지틀 리스트에 추가합니다

다음은 디트 리스트 필드에서 장대

디스 객체를 화면에 출력해주는

메서드입니다

이제 지금까지 만든 클래스를 사용해

보겠습니다

메인 엔트리 클래스를 추가합니다

메인 함수를 추가 하구요

코드를 계산합니다

실행해보면 요

실행해보면 넘버 객체를 생성할 때

전달한 숫자 값이 화면에 추력

되는데요

내부적으로 플라이 웨이드 패턴이

적용되어 디지틀 객체가 재활용 되는

방식으로 최적화 되어 있습니다

이상으로 객체를 생성할 때 많은

메모리를 사용 하거나 생성할 때

시간이 많이 걸리는 경우에 더 적은

메모리로 더 빠르게 필요한 개체를

재사용할 수 있는 플라이 웨이드

패턴에 대해서 살펴보았습니다

