[음악]

아

안녕하세요

고프 의 디자인 패턴 중 프로토타입의

패턴에 대해서 살펴보겠습니다

프로토타입 패턴은 객체를 생성하는

패턴 인데요

객 제일 생성은 일반적으로 클래스를

통해서 생성됩니다

즉 코드 상으로는 클래스 이름 앞에

u 키워드를 사용해서 생성 하는데요

프로토타입 패턴 의 경우 류와

클래스의 이름이 아닌 이미 생성된

객체를 통해서 독립된 또 다른 객체를

생성합니다

이렇게 프로토타입으로 생성된 객체는

그 상태를 변경해도 원본이 되는

객체의 상태 는 변경되지 않습니다

프로토타입 패턴에 대한 클래스

다이어그램 예시 인데요 먼저

프로토타입 인터페이스 는 프로토타이핑

패턴을 위한 인터페이스로 객체로부터

또 다른 새로운 객체를 생성해 내는

api 를 가지고 있습니다

그리고 쉐이프 인터페이스는 도형에

대한 api 를 가지고 있습니다

그리고 구체적인 도형에 대한 클래스

는 p 라인 그룹인데요

모두 프로토 타입과 쉐프 인터페이스를

구현하고 있습니다

그룹은 쉐이프 인터페이스의 객체를

여러개 가질 수 있는 클래스 인데요

쉐이프 인터페이스와 호환되는

여러 개의 객체를 이용해서 새로운

도형을 구성하기 위한 클래스입니다

이시스 에서는 사각형의 대한 도형을

이 구두 클래스를 이용해서 만들어

보겠습니다

즉 사각형의 대한 구체적인 클래스가

없음에도 기존의 포인트와 라인

클래스의 객체를 조합해서 사각형을

생성됩니다

클래스 다이어그램에 대한 코드를

작성해 보겠습니다 먼저 프로토타입

인터페이스입니다

새로운 객체를 복사해서 생성하는 카피

메소드가 있습니다

대부분의 프로토타입 패턴에서는

이 카피 메서드의 판 타임을

최상위 클래스인

오브젝트와 같은 타입을 많이

사용합니다

다음은 셰프 인터페이스입니다

도형을 표현하는 문자열을 반환하는

들어오라는 sd 를 추가합니다

그리고 도형을 일정한 값 거리만큼

이동시키는 무 부 옵셋 sd 를

추가합니다

이제 프로토 타입과 쉐입 인터페이스를

구현하는 구체적인 도형 클래스를

추가하겠습니다

먼저 포인트 클래스입니다

쉐이프 와 프로토타입 인터페이스를

구현하도록 하구요

포인트에 좌표를 나타내는 xy 필드를

추가합니다

ex 와 이 필드의 값을 지정할 수

있는 메서드를 추가합니다

또

ex 와 이 필드의 값을 얻을 수

있는 매스 도 추가 함이라

그리고 구연 해야할 인터페이스의

메서드를 추가합니다

먼저 프로토타입 인터페이스의 카피

배스 드 인데요 새로운 포인트 객체를

생성 하고요

p 객체 x y 값을 새로운 개체에

할당해 줍니다

그리고 새로운 객체를 반환 해주고요

다음은 쉽 인터페이스의 들어오

메서드입니다

그리고 쉼 인터 pc 에 무 부업 3

msd 입니다

x y 좌표 값에 이동 값인 dx 와

기와 1을 더해 주고 있습니다

다음은 라인 클래스입니다

셰프가 프로토타입 인터페이스를

구현하도록 하구요

선의 시작점과 끝점에 대한 길드를

추가합니다

시작점과 끝점을 지정할 수 있는

메서드를 추가합니다

또 시작점과 끝점을 얻을 수 있는

메서드를 추가 구요

그리고 구현 해야 할 인터페이스의

메서드를 추가합니다

먼저 프로토타입 인터페이스의 카피

메서드입니다 새로운 라인 객체를

생성하고 요

새로운 라임 객체를 구성하는 시작점과

끝점을 지정합니다

이때 프로토타입 인터 페이지에 카피

메서드를 사용하고 있는데요 이는

복사본 객체와 원본 객체의 필드

값들이 서로 다른 메모리 상에

위치하도록 복사됩니다

이는 복사본의 시작점과 끝점에 좌표를

변경해도 원본의 시작점인 아 그 점

의 좌표가 변경되지 않도록 합니다

또 반대로 원본의 시작점이 나 끝점에

좌표를 변경해도 복사본의 시작점인 아

그 점 이 좌표가 변경되지 않도록

합니다

마지막으로 새로운 선의 액자를 남

하구요

다음은 쉐입 인터페이스의 배스 들을

구해 납니다

드로우 메서드의 코드는

이와 같습니다

그리고 무 부업 3 패스워드는 다음과

같습니다

선 을 구성하는 시작점과 끝점에

위치를

dx 와 ty 만큼 이동 시켜 주고

있습니다

이제 그룹 플레이스 입니다

[음악]

쉐이프 와 프로토타입 인터페이스를

구현하도록 하구요

그룹 클래스 객체가 가질 쉽 개최

들을 저장할 배열 객체의 필드를

추가합니다

[음악]

그리고 이 그룹의 이름에 대한 필드를

추가합니다

생성자에서 이름에 대한 필드를 지정할

수 있도록 하구요

그룹을 구성하는 도형 개체 를

추가하는 메서드를 작성합니다

그리고 구현 해야 할 인터페이스의

메서드를 추가합니다

먼저

프로토 타입의 카피 메서드 인데요

동일한 이름을 갖는 새로운 그룹

객체를 만들구요

그리고 다음 코드를 입력합니다

원본 2 갇힌 모든

우영 개체에 대해서 요

카피 메서드로 복사를 해서 새로운

그룹의 추가를 하고 있습니다

마지막으로 새로운 굵게 째를 반한

하구요

으

[음악]

쉐입 인테 패스에 대한 메쎄 딘

들어오는 다음처럼 작성합니다

그룹의 이름 것과 함께 그룹을

구성하는 모든 도 형제에 대해서

드로우 메서드 호출에서 결과 값을

생성해 발언한 코드입니다

그리고 쉐입 인터페이스에 대한 매스

드림 웁 우웁 셋은 다음처럼

작성합니다

그룹을 구성하는 모든 도형에 대해서

무 부 옵셋 메서드를 호출해 주고

있습니다

지금까지 작성한 클래스들을 테스트

해보도록 하겠습니다

메인 엔트리 클래스를 추가합니다

메인 함수를 추가합니다

먼저 포인트 객체를 생성해서 좌표를

0 0으로 지정하고 출력해 보도록

하겠습니다

실행해보면 요

두번째 포인트 객장 은 좌표를

배경으로 지정하고 출력해 보겠습니다

[음악]

이 두 개의 포인트를 이용해서 하나의

성 객체를 생성할 수 있구요

[음악]

그리고 다음처럼 앞이 메서드를 통해서

도

2라인 원 객체와 동일한 좌표를 갖는

선 객체를 생성할 수 있습니다

이제 사각형 도형을 생성해 보겠습니다

사각형은 4개의 선으로 구성되어

있는데요

네 개의 선 중 한 개는 이 라인 원

객체를 이용하고 나머지 세 개의 선을

위한 포인트 객체를 생성하게 씁니다

그리고 3개의 선 객체를 생성합니다

이제 라인 원 라인 투라인 쓰리

그리고 라인 포 를 이용해서 사각형

도형을 만들어 보겠습니다

렉 트 라는 이름으로 그룹 클래스

객체를 생성 하구요

[음악]

네 개의 선 객체를 구성도 형으로

추가합니다

[음악]

그리고 축약해 봅니다

스윙이 보면요

다음처럼 렉 트 객체를 카피 메서드를

사용해서 복사를 할 수 있습니다

이동시켜 보겠습니다

그리고 복사된 사각형과 원 본 사업

경을 추억해 보겠습니다

이를 위해서 기존의 추력 코드는 모두

제거 하구요

[음악]

결과를 보면 두개의 구성 좌표가

독립적 있는 것을 확인할 수 있습니다

지금까지 실습을 통해서 프로토타입의

패턴에 대해서 살 봤는데요

정리하면 루타 이 패턴은 실행중에

만든 객체를 통해서 새로운 객체를

생성해 되는 패턴입니다

이때 원 풀이되는 객체와 복사본이

되는 객체의 상태 값은 완전히

독립되어 있어서 서로 영향을 주지

않습니다

이를 깊은 복사 가 되었다 라고

합니다

이런 깊은 복사 장치를 빠른 해준다는

점이 폴트 타이 패턴의 중요한 점 중

하나입니다

아울러 앞서 본 예제에서 사각형

객체를 생성해 보았는데요

클래스 다이어그램 여는 이사라 통 에

대한 클래스 가 존재하지 않는다는

점입니다

다만 기존의 클래스들의 객체를

조합하는 방식으로

사업 경 객체를 생성해 되었습니다

이처럼 새로운 클래스를 추가하지

않고도 새로운 개념의 객체를 생성할

수 있는 상황을 만들 수 있다면

프로토타입의 패턴을 적용해서 유연성을

발휘할 수 있습니다

이상으로 프로토타입의 패턴에 대해서

살펴보았습니다

