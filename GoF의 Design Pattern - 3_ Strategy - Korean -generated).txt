[음악]

아

안녕하세요

곡부 의 디자인 패턴 중 스트래티지

패턴 즉 전략 패턴에 대해서

살펴보겠습니다

strategy 패턴은 곱구 의 디자인

패턴 중 상대적으로 가장 단순한 패턴

인데요 strategy 패턴은 어떤 하나의

기능을 구성하는 특정 부분을 취 쟁

중에 다른 것으로 효과적으로 변경할

수 있는 방안을 제공합니다

즉 필요할 경우 전략을 바꿀 수 있는

패턴이라고 할 수 있습니다

이 그림을 보면 요 어떤 하나의

기능이 있구요

이 기능을 실행하기 위해서 음기 1

에서부터 단계의 니 까지 순서대로

시행되어야 합니다

이때 단계의 3에 대해서는 어떤

이유로 실행중에 변경될 필요가 있을

때

strategy 패턴이 유용합니다

이 클래스 다이어그램은 폐해 터즈

패턴의 까지 얘기인데요 SumPrinter는

일부터 어떤 수 까지 총 합을

출력해주는 클래스입니다

이때 일부터 어떤 수 까지 의 총합은

2

썸 스트레 터지 인터페이스를 통해서

얻어 옵니다

그리고 일부터 어떤 수 까지 의

총합을 얻는 구체적인 코드는 이 썸

스태프 지 인터페이스를 구현한 심플

썸 스 테 터 지와 가우스 싸움 세터

g 클래스 에서 제공합니다

중요한 점은 이 썬 프린터는 싸움

스테 터지 인터페이스 많은 알 뿐

실제 총 합을 계산하는 심플 썸 세터

지와 가우스 썸 스 테 터 g 클래스

의 존재를 모른다는 것입니다

이로 인해서 후에 총합을 개선하는

다른 방법이 추가되었을 때 기존의 썸

프린터 클래스의 코드를 전혀 변경할

필요가 없어집니다

이 클래스 다이어그램을 그런 해보도록

하겠습니다 먼저 SumPrinter

클래스입니다

이 클래스 는 n2 까지 총 합을

출력하는 프린트 매스 더 있는데요

첫 번째 인자가

썸 스트립티즈 인터페이스의 타입으로

총 합을 계산하는 방법이고요

두번째 인자가 총 합을 구하기 위한

n 값입니다

구현해 보면요

먼저 메세지를 출력하고 요

그리고 스트래티지 를 통해서 총합을

얻어와 출력을 합니다

다음은 썸 스테 터지 인터페이스를

추가하겠습니다

이 인터페이스는 1부터 n 이 까지

총 합을 얻는 메서드 마늘 제공합니다

이제 이 인터페이스에 대한 구형 필수

중 심플 썽 스웨터 g 클래스를

추가합니다

이 클래스가 구현 해야 할

인터페이스를 지정 하구요

그리고 구현 해야 할 메서드를

추가합니다

그리고 구현 코드를 입력합니다

단순히 1부터 2까지 반복해서 그 총

합을 구하고 있습니다

다음에 축을 클래스 는 가우스 섬

스테 터즈 클래스입니다

구현 해야 할 인터페이스를 시작하구요

구현 해야 할 메서드를 추가합니다

그리고 구현 코드를 작성 하구요

이제 클래스 다이어그램에 대한 내용을

모두 9 10 했는데요 테스트를

위해서 메인 엔트리 클래스를

추가했습니다

메인 메서드를 추가 하구요

SumPrinter 객체를 하나 만들겠습니다

먼저 심플 썸 스테 터즈 클래스를

이용해서 1부터 n 까지 합을 출력해

보겠습니다

다음은 가우스 싸움 스테 터진

클래스를 이용해서 1부터 10까지

합을 출력해 보겠습니다

생이 보면요

결과를 보면

1부터 10까지 합의해서 심플 썸

스웨터 지와 하우스 섬 스 테 터 제

클래스 모두 올바르게 출력되는 것을

볼 수 있습니다

이처럼 하나의 기능에 대해서 서로

다른 방식의 구현을 실행중에 변경할

수 있는 스펙터 지 패턴에 대해서 색

보았습니다

