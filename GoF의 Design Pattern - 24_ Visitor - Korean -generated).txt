[음악]

아

안녕하세요

고쿄 의 디자인 패턴 좀 비스터

패턴에 대한 강좌입니다

비지터 패턴은 데이터 구조와 데이터

처리를 불리해지는 패턴 인데요

데이터를 나타내는 클래스가 있다면 이

데이터를 처리하는 코드는 해당 데이터

클래스의 메서드 로 구현하는 것이

쉬워 보입니다

그러나 비스터 패턴은 데이터를

처리하는 방식을 s 드 가 아닌

별도의 클래스 로 구현합니다

이렇게 데이터 구조와 데이터를

처리하는 방법을 별도의 클래스로 분리

정도 써 새로운 데이터 처리 방식을

추가할 때 기존의 소스코드 변경 없이

새로운 클래스 추가 만으로 기능을

확장할 수 있습니다

그리고 데이터 구조는 컴 1st

패턴을 사용함으로써 단일 데이터와

단일 데이터 로 구성되는 집합

데이터를 표현할 수 있습니다

이 그림은 비스터 패턴에 대한 클래스

다이어그램 예시 인데요

먼저

이윤이 인터페이스와 이를 구현하는

아이템 아이템 리스트 클래스가 데이터

구조를 나타냅니다

그리고 비지터 인터페이스와 이를

구현하는 썽 비스터 에버리지 피터

클래스가 데이터 처리를 나타냅니다

2 아이템 클래스가 단일 데이터 를

나타내 부요 하나의 정수 값을 가지고

있습니다

이 리스트 아이템은

유니 타입의 개체를

여러개 가질 수 있도록 해서요

단일 데이터나 집합 데이터를 포함할

수 있도록 합니다

그리고 이 썬 비턴 은 데이터가

가지고 있는 정수 값들을 확산 해주는

킹 을 가지고 요

이애 버리지 비스터 는 데이터 가지고

있는 정수 값들의 평균을 개선해 주는

기능을 가집니다

먼저

데이터 구조를 나타내는

이윤이 측에서

엑셀 fl 메서드로

이 비스터 객체의 의 방문을 허락하고

요

허락받은 비터 객체는 다시 비트 애써

들 통해서 허락된 데이터의 값을

처리하게 됩니다

이 클래스 다이어그램을 코드로 구해

모르겠습니다

먼저 데이터 구조를 나타내는

유닛 인터페이스입니다

데이터를 처리하는 비지터 객체를

허용하는 엑시트 api 만 존재합니다

다음은 단일 데이터를 나타내는 2

아이템 클래스입니다

유닛 인터페이스를 구현 하구요

아이템 클래스 는 점수 값을 킬

들어갔습니다

[음악]

생성자에서 이 필드의 값을 지정할 수

있도록 하구요

그리고 이 필드의 값을 얻을 수 있는

메서드를 추가합니다

그리고 구현 해야 할 메서드를

추가합니다

[음악]

코드는 다음과 같습니다

단순히 비스터 객체의

비지트 메서드를 호출해 주고 있습니다

그리고

비터 메소드의 인자로

디스를 전달해서

비지터 개최해서

이 데이터를 처리할 수 있도록 하고

있습니다

다음은 여러 개의 데이터를 가질 수

있는 아이템 리스트 클래스입니다

유닛 인터페이스를 구현 하구요 으

유니 타입의 객체를 가질 수 있는

배열 필드를 추가합니다

이 배열 필드 를 이용해서 여러 개의

데이터를 가질 수 있습니다

이 배열 필드의 데이터를 추가할 수

있는 메소드를 추가합니다

추가되는 데이터를 유니 타입으로

지정함으로써 단일 데이터 인 이

아이템 객지 뿐만 아니라

집합 데이터인 i10 미스트 객체도

추가할 수 있도록 합니다

그리고 구현 해야 할 회사들을

추가합니다

이 리스트 필드에 포함된 모든 유니

타입의 객체 에 의해서

비지트 메서드를

출 해줍니다

[음악]

이제 데이터 처리를 나타내는

비지터 인터페이스를 추가합니다

데이터를 방문해서 처리하는

비스트 api 를 추가합니다

이 비스터 인터페이스를 구현하는 썸

비스터 클래스를 추가합니다

비서 인터페이스를 구현 하구요 으

이 클래스 는 데이터를 구성하는

값들의 합을 계산하는 기능을

제공하는데요

데이터 합을 기억하기 위해서 썸

필드를 추가합니다

그리고 이 필드의 값을 얻을 수 있는

sd 를 추가합니다

구현 해야 할 메서드를 추가합니다

코드를 입력하면 요

만약 방문한 데이터가 아이템 클래스

라면

정수 값을 가진 단일 데이터 란

것인데요 이 경우에는

아이템 클래스 로 형변환 해서

정수값을 얻은 지에 썸 필드에

더해지고 있습니다

그런데 만약 단일 데이터 가 아니라면

이규 1 객체에 대해서 엑센트

메서드를 호출합니다

바로 이 코드를 통해서

집합 데이터가 포함하고 있는 모든

데이터를 방문하고

비터 객체에서 처리할 수 있도록

합니다

평균 값을 계산하는 에버리지 비스터

클래스를 추가합니다

에버리지 비스터 클래스도

있어 m 클래스 와 비슷한 방식으로

구현 되는데요

먼저 비스터 인터페이스를 구해 나구요

평균을 위한 데이터의 전체 합계 와

데이터 수를 저장할 필드를 추가합니다

그리고 이 두 필드를 통해서

평균 값을 얻을 수 있는 메서드를

추가합니다

구현의 할 메서드를 추가합니다

코드는 다음과 같습니다

이제 테스트 해보도록 하겠습니다

메인 엔트리 클래스를 추가 구요

메인 함수를 추가합니다

먼저 데이터를 정리하겠습니다

미스트 원이라는

아이템 리스트 개체를 하 만들구요

그리구

으

이 리스트 원 객체의 세계의 아이템

객체를

만들어서 추구하고 있습니다

아이템 개체는 어떤 정수 값을 담고

있구요

다시

리스트 라는

아이템 리스트 개체를 만듭니다

그리고

리스트 투에

그게 예 점수가 값을 추가 하구요 또

비스트 원에는

b 스툴을 추가합니다

그리고 미스트 쓰리 라는 또 다른

아이템 이스트 객체를 만들구요

리스트 쓰리 에

정수값을 담습니다

[음악]

그리고 리스트 쓰리 를

리스트 2 에 추가합니다

이제

비스트 원 을 구성하는 모든

데이터들의 합계를 구해 보겠습니다

먼저 썸 비스터 객체를 만들구요

리스트 원의 xf 의 메서드를

호출합니다

그리고 합계 를 클릭합니다

다음은 리스 원에 대한 평균값을 없는

코드입니다

[음악]

추정의 보면요

본 것처럼 올바르게 합계 와 평균값이

계산 된 것을 확인할 수 있습니다

이상으로

비지터 패턴에 대해서 살펴보았습니다

b4 패턴은 데이터 구조와 데이터

처리를 별도의 클래스 로 분리 줍니다

비터 패턴을 적용하면 새로운 데이터

처리 방식을 추가할 때 기존에 작성된

코드는 전혀 변경할 필요 없이 데이터

처리를 위한 클래스만 추가함으로써

시스템을 확장할 수 있습니다

이는 시스템 유지 보수에 매우 큰

도움을 줍니다

지금까지 23개 예 고프 에 디자인

패턴을 모두 살펴보았습니다

이 강좌에 제목이 쉽고 깊이 있게

설명하는 디자인 패턴 인데요

처음 생각과는 다르게 집수 않고 또한

깊이 있게 설명하지 못한 부분이

많았습니다

사실 14일 패턴은 처음 접하는

분들에게

난해한 부분이 제법 많습니다

이는 디자인 패턴을 학습하기 위해서는

먼저 오피 라는 객체지향 프로그래밍에

대한 선행 학습이 필요합니다

디자인패턴 학습하기에 가장 적합한

때는 오피를 먼저 학습하고 난 뒤에

디자인 패턴에 대한 지식이 없이

코드를 5p 로 작성해 본 것입니다

그러면 오피에 대한 마개 남과

답답함이 느껴지는 데요

이때가 디자인 패턴을 학습하기에 가장

좋은 때입니다

이세인 패턴을 10분에서 20분

분량의 영상을 통해 설명하다 보니

다소 내용을 압축해서 설명드린 것

같습니다

하지만 설명해야 할 부분은 최대한 빼

놓지 않고 서면 들었습니다

이 강좌에 영상들을 한번이 아닌

여러번 반복해서 보신다면 처음에

이해하지 못한 부분들을 새롭게 이해할

수 있고

객체지향 프로그래밍에 대한 생각의

폭을 크게 확장할 수 있을거라

확신합니다

디자인 패턴에 대한 첫 번째 강좌에서

말씀드렸듯이

디자인 패턴은 배울 필요가 없습니다

또 설계의 반드시 그대로 적용해 한

것도 아닙니다

이해하는 것이 중요합니다

디자인 패턴은 클래스 들간의 최적의

관계를 매우 효과적으로 설계할 수

있는 하나의 사례로 받아들이고

이해하게 됩니다

디자인 패턴을 배경지식을 인지하고

각각의 디자인 패턴을 여러 가지

관점에서 변형하고 서로 혼합하여

소프트웨어 설계의 활용하시면 됩니다

이상으로 고 표에 디자인 패턴에 대한

강좌를 모두 마치도록 하겠습니다

지금까지 시청해주셔서 감사합니다

